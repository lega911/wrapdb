function open(n="default",o="default"){return new Promise((t,e)=>{let r=indexedDB.open(n,1);r.onerror=()=>e(),r.onupgradeneeded=e=>e.target.result.createObjectStore(o),r.onsuccess=()=>{var e=r.result;e.__store=o,t(e)}})}function set$1(e,t,r){return operateStore(e,e=>e.put(r,t))}function get$1(e,t){return operateStore(e,e=>e.get(t),1)}function delete_$1(e,t){return operateStore(e,e=>e.delete(t))}function clear$1(e){return operateStore(e,e=>e.clear())}function operateStore(c,u,s){return new Promise(async(t,r)=>{let n,o,a=0,e=e=>{a<0||(e?3==++a&&(a=-1,t(s?n.result:null)):(a=-1,r(),o.abort()))};(o=c.transaction(c.__store,"readwrite")).oncomplete=()=>e(1),o.onerror=()=>e(0),(n=u(o.objectStore(c.__store))).onsuccess=()=>e(1),n.onerror=()=>e(0),o.commit(),e(1)})}let db=open();async function set(e,t){return set$1(await db,e,t)}async function get(e){return get$1(await db,e)}async function delete_(e){return delete_$1(await db,e)}async function clear(){return clear$1(await db)}export{clear,delete_ as delete,get,set};