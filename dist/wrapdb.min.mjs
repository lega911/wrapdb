function open(r="default",o="default"){return new Promise((t,e)=>{let n=indexedDB.open(r,1);n.onerror=function(){e()},n.onupgradeneeded=function(e){e.target.result.createObjectStore(o)},n.onsuccess=function(){var e=n.result;e.__store=o,t(e)}})}function set$1(e,t,n){return runStore(e,e=>e.put(n,t))}function get$1(e,t){return runStore(e,e=>e.get(t),1)}function delete_$1(e,t){return runStore(e,e=>e.delete(t))}function clear$1(e){return runStore(e,e=>e.clear())}function runStore(a,i,s){return new Promise(async(t,n)=>{let r,e,o=0,u=e=>{o<0||(e?3==++o&&(o=-1,t(s?r.result:null)):(o=-1,n()))};(e=a.transaction(a.__store,"readwrite")).oncomplete=function(){u(!0)},e.onerror=function(){u(!1),n(),e.abort()};var c=e.objectStore(a.__store);(r=i(c)).onsuccess=function(){u(!0)},r.onerror=function(){u(!1),e.abort(),n()},e.commit(),u(!0)})}let db=open();async function set(e,t){return set$1(await db,e,t)}async function get(e){return get$1(await db,e)}async function delete_(e){return delete_$1(await db,e)}async function clear(){return clear$1(await db)}export{clear,delete_ as delete,get,set};